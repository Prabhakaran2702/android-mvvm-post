// Generated by data binding compiler. Do not edit!
package com.example.justclean_mvvm_post.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.justclean_mvvm_post.R;
import com.example.justclean_mvvm_post.data.model.Post;
import com.example.justclean_mvvm_post.ui.adapter.PostClickListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class PostItemBinding extends ViewDataBinding {
  @NonNull
  public final TextView body;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView postid;

  @NonNull
  public final TextView title;

  @Bindable
  protected Post mPost;

  @Bindable
  protected PostClickListener mListener;

  protected PostItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView body, CardView cardView, ImageView imageView, TextView postid, TextView title) {
    super(_bindingComponent, _root, _localFieldCount);
    this.body = body;
    this.cardView = cardView;
    this.imageView = imageView;
    this.postid = postid;
    this.title = title;
  }

  public abstract void setPost(@Nullable Post post);

  @Nullable
  public Post getPost() {
    return mPost;
  }

  public abstract void setListener(@Nullable PostClickListener listener);

  @Nullable
  public PostClickListener getListener() {
    return mListener;
  }

  @NonNull
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.post_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<PostItemBinding>inflateInternal(inflater, R.layout.post_item, root, attachToRoot, component);
  }

  @NonNull
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.post_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static PostItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<PostItemBinding>inflateInternal(inflater, R.layout.post_item, null, false, component);
  }

  public static PostItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static PostItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (PostItemBinding)bind(component, view, R.layout.post_item);
  }
}
